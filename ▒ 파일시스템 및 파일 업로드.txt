■■■ 파일시스템 및 파일 업로드 ■■■

○ java.io.FileInputStream 클래스

   자바에서는 파일에대한 바이트 단위 입출력을 수행할 수 있도록 하기 위해
   FileInputStream 클래스와  FileOutputStream 클래스를 제공 하고 있다.
   
   ※ FileInputStream 클래스
      : 시스템의 파일로부터 데이터를 바이트스트림으로 읽어들이기 위해 사용.
   ※ FileOutStream 클래스를 이용하여 데이터를 읽어들일 때에는
   	  데이터 소스인 파일과 직접 연결하여 사용한다.
     (이 때, 지정한 파일이 존재하지 않을 경우 IOException 발생)
   ※ FileInputStream 클래스는 InputStream 클래스의 하위 클래스 이므로
   	  InputStream 클래스의 기본적인 메소드를 상속받거나 재정의하여 사용한다.
   	 (InputStream 클래스는 바이트 단위 입력 기능의 최상위 클래스이며 추상 클래스이다.)
   
   
   - 생성자
   ·FileInputStream(File file)
   	 : 주어진 File 객체가 가리키는 파일을 바이트 스트림으로 읽기 위한
       FileInputStream 객체를 생성한다.
   ·FileInputStream(FileDescripor fdObj)
     : 주어진 FileDescriptor 객체기 가리키는 파일을 바이트스트림으로 읽기위한
       FileInputStream 객체를 생성한다.
   ·FileInputStream(String name)
     : 주어진 이름이 가리키는 파일을 바이트스트림으로 읽기 위한
       FileInputStream 객체를 생성한다.
       
       
○ java.io.FileOutputStream 클래스
  
     FileOutputStream 클래스는
     데이터를 파일에 바이트스트림으로 저장하기 위해 사용한다.
     파일명이나 File 클래스의 객체를 인수로 넘겨줌으로써
     시스템에 파일을 직접 생성할 수 있다.
     기본적으로 (default) 파일이 이미 존재한다면 덮어쓰기로 처리되기 때문에
     기존의 내용을 사라지게 된다.
     
     ※ FileOutputStream 클래스는 OutputStream 클래스의 하위 클래스 이므로 
     FileOutputStream 클래스의 기본적인 메소드를 상속받거나 재정의 하여 사용 할 수있다.
     
     
     - 생성자
     ·FileOutputStream(File file)
       : 주어진 File 객체가 
     ·FileOutputStream()
       : 
     ·FileOutputStream(File
       :
     ·FileOutputStream()
       :
     ·FileOutputStream(String name)
       : 주어진 이름이 가리키는 파일을 바이트스트림으로 쓰기휘한
         기존의 파일이 존재할 경우 기본적으로() 그 내용을 지우고
         새로운 파일을 생성하게 된다.(덮어쓰기)
     ·FileOutputStream(String name, boolean append)
       : 주진 이름이
      ·FileOutputStream 객체를 생성한다.
      기존의 파일이 존재할 경우 append 로 설정된

      
○ java.io.FileReader 클래스
     
     FileReader 클래스는 
     파일에 저장된 바이트를 유니코드 문자로 변환하여 읽어들이고,
     파일 쓰기 클래스인 FileWriter 클래스는
     출력할 유니코드 문자열을 시스템에 맞는 디폴트 문자 인코딩 반식으로 변환하여
     파일에 저장하는 역할을 수행한다.
     
     FileReader 클래스는 
     파일에 저장된 문자열을 읽어들이는데 사용되며,
     이 클래스는 InputStreamReader 클래스를 상속한 것으로
     바이트스트림을 읽어서 그 바이트를 유니코드로 나타내는 정수타입의 값으로
     변환하게 된다.
     FileReader 클래스 역시 데이터를 읽어들일 소스인 파일과 직접 연결하여 사용하며,
     지정한 파일이 존재하지 않을경우 FileNotFoundException 을 발생시키게된다.
     
     - 생성자
     ·FileReader(File file)
       : 주어진 File 객체를 이용하여 FileReader
     
     
     
     
     
     ○ java.io.FileWritr 클래스
     
     FileWriter 클래스는
     파일 문자 풀려스트림으로 출력할 문자를 디폴트 문자 인코딩의 바이트로 변환하여
     파일에 저장하고자 할떄 사용한다.
     이 클래스는 OuuputStreamWriter 클래스의 서브클래스로
     유니코드를 바이트로 변환하는 기능을 담당하게 된다.
     FileOutputStream 클래스와 마찬가지로 
     파일명이나 File 클래스의 객체를 인수로 넘겨줌으로써
     시스템에 파일을 직접 생성하게된다.
     기본적으로(default) 해당 파일이 이미 존재할 경우 덮어쓰기 하게 된다.
     
     - 생성자
     ·FileWritr(File file)
       : 주어진 File 객체를 이용하여 FileWriter 객체를 생성한다.
     ·FileWritr(FileDescriptor fd)
       : 주어진 FileDescriptor 객체를 이용하여 FileWriter 객체를 생성한다.
     ·FileWritr(String fileName)
       : 주어진 파일을 열어 FileWriter 객체를 생성한다.
      ·FileWritr(String fileName, boolean append)
       : 주어진 파일을 append 의 값에 따라(true / false)
	 읽기 / 추가 모드로 열어 FileWriter 객체를 생성한다.
     
     
     
※ 파일과 디렉터리 관련(관리) 클래스 → java.io.File 클래스
     
     File 클래스는 파일 및 디렉터리를 관리 할 수 있도록 기능을 제공해주는 클래스로
     파일의 복사 또는 이름 변경 등의 조작을 할 경우 사용될 뿐
     파일의 내용을 입출력하기 위한 메소드를 제공해주지는 않는다.①
     자바에서는 모든 데이터의 입출력을 『스.트.림』에 기반하여 수행하기 때문에
     File 클래스는 내부적으로 이러한 메소드를 구현할 필요가 없는 것이다.
     단, File 클래스의 인스턴스는 변경이 불가능하다.
     즉, 한번 생성되면 File 객체에 의해 표현되는 추상 경로명은 절대 변하지 않는다.
     
   
   ★  
※ 파일 업로드
     
     웹 브라우저를 통해 파일을 전송하기 위해 폼을 구성할 경우
     - form 태그 안에 ... input 채그의 type 속성의 속성값이
       file 인 태그를 통해 파일을 선택할 수있는 대화창을 제공한다.
     - 이 때, method 속성은 post 를 사용해야 하며,
       enctype 속성의 값은 『"multipart/form-data"』로 지정해야 한다.
     - 단, 『enctype="multipart/form-data"』 로 지정한 폼을 전송할 경우
       request 객체로 얻어낸 파라미터 이름으로 값을 얻어낼 수 없다.
       이 말은 『<input type="file">』로 지정된 파일을
       서버 상의 특정 경로에 업로드 하기 위해서 『특별한 컴포넌트』가 
       필요하다는 의미이다.
     
※ 특별한 컴포넌트 : 『cos.jar』
     
     - 다운로드 URL : http://www.servlets.com/cos/
     - 다운로드 파일 : cos-20.08.zip   →  22.05
     - 다운로드 후 압축 해제 > lib 디렉터리 → cos.jar  
     
※ enctype
     
----------------------------------------------------------------------------------------
■■■ 파일시스템 및 파일업로드 실습 ■■■ 2022-12-06
 
 ○ fileSystemApp00

  -  기본 환경 구성

 ○ fileSystemApp01

  - 파일시스템 및 어플리케이션루트(찍어보기)

 ○ fileSystemApp02

  - 파일시스템 파일 저장 및 읽기

  
 ○ fileSystemApp03

  - 파일시스템 파일 객체

 ○ fileSystemApp04

  - 파일시스템 송수신
     Send.jsp    Receive.jsp

 ○ fileSystemApp05

  - 파일업로드 HTTP 메세지 확인


 ○ fileSystemApp06

  - 파일시스템 파일업로드


 ○ fileSystemApp07

  - 파일업로드 단일파일업로드

 ○ fileSystemApp08

  - 파일업로드 단일파일업로드 및 다운로드

 ○ fileSystemApp09

  - 파일업로드 다중파일업로드



